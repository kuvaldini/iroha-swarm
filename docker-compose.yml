version: "2.4"

services:
  iroha_tech_10001: &service_iroha_tech
    image: ${IROHA_IMAGE}
    container_name: iroha_4-1
    ports:
      - 10001:10001
      - 50051:50051
      - 55552:55552
      - 9090:9090
      - 5551:5551  ## Metrics
    expose: 
      - 10001
      - 50051
      - 5551
    environment: &iroha_tech_env
      - "KEY=iroha.tech.001"
      - "IROHA_POSTGRES_HOST=iroha-postgres"
      # - IROHA_POSTGRES_DATABASE=iroha_001
      # - "IROHA_CRYPTO_PROVIDERS_0_TYPE=default"
      # - "IROHA_VOTE_DELAY=5000"
      # - "IROHA_MAX_PROPOSAL_SIZE=10000"
      # - "IROHA_CRYPTO_PROVIDERS_0_CRYPTO_TYPE=ed25519_sha3_256"
      # - "IROHA_CRYPTO_PROVIDERS_0_KEY=p1"
      # - "IROHA_MST_EXPIRATION_TIME=1440"
      - "IROHA_PG_OPT=dbname=iroha_001 host=iroha-postgres port=5432 user=postgres password=postgres"
      # - "IROHA_MAX_ROUNDS_DELAY=10000"
      # - "IROHA_BLOCK_STORE_PATH=/tmp/block_store/"
      # - "IROHA_MST_ENABLE=true"
      # - "IROHA_CRYPTO_PROVIDERS_0_PRIVATE_KEY=cc5013e43918bd0e5c4d800416c88bed77892ff077929162bb03ead40a745e88"
      # - "IROHA_TORII_PORT=50051"
      # - "IROHA_INTERNAL_PORT=10001"
      # - "IROHA_PROPOSAL_DELAY=1"
      # - "IROHA_CRYPTO_SIGNER=p1"
    volumes:
      - block_strore_1:/tmp/block_store
      # - ./iroha_tech_10001/conf:/opt/iroha_data
      - ./genesis.2.block:/opt/iroha_data/genesis.block
      - ./iroha-common-config.json:/opt/iroha_data/config.docker
      - ./keys/iroha.tech.001.priv:/opt/iroha_data/iroha.tech.001.priv
      - ./keys/iroha.tech.001.pub:/opt/iroha_data/iroha.tech.001.pub
    depends_on:
      - iroha-postgres
    logging:
      driver: "json-file"
      options:
        max-size: "1000m"
        max-file: "5"
    restart: always
    command: "${IROHA_COMMAND}"  ## Taken from file .env
    # command: "--drop_state --overwrite_ledger --verbosity=trace"

  iroha_tech_10002:
    <<: *service_iroha_tech
    container_name: iroha_4-2
    ports:
      - 10002:10001
      - 50052:50051
      - 5552:5551  ## Metrics
    expose: 
      - 10001
      - 50051
      - 5551
    environment:
      # - <<: *iroha_tech_env
      - "KEY=iroha.tech.002"
      # - "IROHA_POSTGRES_HOST=iroha-postgres"
      - "IROHA_PG_OPT=dbname=iroha_002 host=iroha-postgres port=5432 user=postgres password=postgres"
    volumes:
      - block_strore_2:/tmp/block_store
      # - ./iroha_tech_10002/conf:/opt/iroha_data
      - ./genesis.2.block:/opt/iroha_data/genesis.block
      - ./iroha-common-config.json:/opt/iroha_data/config.docker
      - ./keys/iroha.tech.002.priv:/opt/iroha_data/iroha.tech.002.priv
      - ./keys/iroha.tech.002.pub:/opt/iroha_data/iroha.tech.002.pub

  # iroha_tech_10003:
  #   <<: *service_iroha_tech
  #   container_name: iroha_4-3
  #   ports:
  #     - 10003:10001
  #     - 50053:50051
  #     - 5553:5551  ## Metrics
  #   environment:
  #     # - <<: *iroha_tech_env
  #     - "KEY=iroha.tech.003"
  #     - "IROHA_POSTGRES_HOST=iroha-postgres"
  #   volumes:
  #     - block_strore_3:/tmp/block_store
  #     # - ./iroha_tech_10003/conf:/opt/iroha_data
  #     - ./genesis.block:/opt/iroha_data/genesis.block
  #     - ./iroha-common-config.json:/opt/iroha_data/config.docker
  #     - ./keys/iroha.tech.003.priv:/opt/iroha_data/iroha.tech.003.priv
  #     - ./keys/iroha.tech.003.pub:/opt/iroha_data/iroha.tech.003.pub

  # iroha_tech_10004:
  #   <<: *service_iroha_tech
  #   container_name: iroha_4-4
  #   ports:
  #     - 10004:10001
  #     - 50054:50051
  #     - 5554:5551  ## Metrics
  #   environment:
  #     # - <<: *iroha_tech_env
  #     - "KEY=iroha.tech.004"
  #     - "IROHA_POSTGRES_HOST=iroha-postgres"
  #   volumes:
  #     - block_strore_4:/tmp/block_store
  #     # - ./iroha_tech_10004/conf:/opt/iroha_data
  #     - ./genesis.block:/opt/iroha_data/genesis.block
  #     - ./iroha-common-config.json:/opt/iroha_data/config.docker
  #     - ./keys/iroha.tech.004.priv:/opt/iroha_data/iroha.tech.004.priv
  #     - ./keys/iroha.tech.004.pub:/opt/iroha_data/iroha.tech.004.pub

  iroha-postgres:
    image: postgres:11.6
    container_name: iroha-postgres_4
    healthcheck:
      test: pg_isready -U postgres
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 300s
    environment:
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432
    ports:
      - 65432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # networks:
    #   - iroha-net
    restart: always
    command: "postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=200"

  # metrics:
  #   image: prometheus
  #   ports: 
  #     - 8090:8090
  #   volumes:
  #     - iroha_prometheus_data:/opt/data
  #   networks:
  #     - iroha-net
  #   restart: always

  ## To be used as following
  ##    docker compose run all-volumes ls -l /tmp/block_store_1/
  all-volumes:
    image: ubuntu
    container_name: iroha-volumes
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - block_strore_1:/tmp/block_store_1
      - block_strore_2:/tmp/block_store_2
      - block_strore_3:/tmp/block_store_3
      - block_strore_4:/tmp/block_store_4
    stdin_open: true # docker run -i
    tty: true        # docker run -t

volumes:
  postgres_data:
  block_strore_1:
  block_strore_2:
  block_strore_3:
  block_strore_4:
  iroha_prometheus_data:
